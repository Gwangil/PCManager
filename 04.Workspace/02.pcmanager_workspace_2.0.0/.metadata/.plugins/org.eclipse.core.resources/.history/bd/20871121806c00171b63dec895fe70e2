/**
 * 
 */
package work.model.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import work.model.dto.Member;
import work.util.Utility;

/**
 * ## DAO(Data Access Object) Pattern
 * -- DataSource(FactoryDao)���� Connection, close ���
 * -- Singleton Pattern ���� ����
 */
public class MemberDao {
	// FactoryDao ��ü ����
	private FactoryDao factory = FactoryDao.getInstance();
	
	// Singleton Pattern ���� ����
	private static MemberDao instance;
	private MemberDao() {}
	static {
		instance = new MemberDao();
	}
	public static MemberDao getInstance() {
		return instance;
	}
	
	// Connection ��ȯ �޼��� ���� : getConnection() : Connection
	public Connection getConnection() {
		return factory.getConnection();
	}
	
	// ��üȸ����ȸ
	public ArrayList<Member> selectList() {
		ArrayList<Member> list = new ArrayList<Member>();
		Connection conn = null;
		Statement stmt = null;
		ResultSet rs = null;
		String sql = "select * from members";
		
		try {
			conn = getConnection();
			stmt = conn.createStatement();
			rs = stmt.executeQuery(sql);
			
			String memberId = null;
			String memberPw = null;
			String memberName = null;
			String mobile = null;
			String email = null;
			String entryDate = null;
			String grade = null;
			int mileage = 0;
			String manager = null;
			Member dto = null;
			
			while(rs.next()) {
				memberId = rs.getString("member_id");
				memberPw = rs.getString("member_pw");
				memberName = rs.getString("member_name");
				mobile = rs.getString("mobile");
				email = rs.getString("email");
				entryDate = rs.getString("entry_date");
				grade = rs.getString("grade");
				//grade = rs.getString("grade").charAt(0);
				mileage = rs.getInt("mileage");
				manager = rs.getString("manager");
				
				dto = new Member(memberId, memberPw, memberName, mobile, email, entryDate, grade, mileage, manager);
				list.add(dto);
			}
			
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("Error(��üȸ����ȸ����) : " + e.getMessage());
		} finally {
			factory.close(rs, stmt, conn);
		}
		
		return list;
	}
	
	// ��������ȸ(���̵�) : Member
	public Member selectOne(String memberId) {
		Connection conn = null;
		PreparedStatement stmt = null;
		ResultSet rs = null;
		String sql = "select * from members where member_id=?";
		
		try {
			conn = getConnection();
			stmt = conn.prepareStatement(sql);
			stmt.setString(1, memberId);
			rs = stmt.executeQuery();
			
			String memberPw = null;
			String memberName = null;
			String mobile = null;
			String email = null;
			String entryDate = null;
			String grade = null;
			int mileage = 0;
			String manager = null;
			
			while(rs.next()) {
				memberId = rs.getString("member_id");
				memberPw = rs.getString("member_pw");
				memberName = rs.getString("member_name");
				mobile = rs.getString("mobile");
				email = rs.getString("email");
				entryDate = rs.getString("entry_date");
				grade = rs.getString("grade");
				mileage = rs.getInt("mileage");
				manager = rs.getString("manager");
				
				return new Member(memberId, memberPw, memberName, mobile, email, entryDate, grade, mileage, manager);
			}
			
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("Error(��üȸ����ȸ����) : " + e.getMessage());
		} finally {
			factory.close(rs, stmt, conn);
		}
		
		return null;
	}

	// ��޺� ��üȸ�� ��ȸ
	public ArrayList<Member> selectList(String grade) {
		ArrayList<Member> list = new ArrayList<Member>();
		Connection conn = null;
		PreparedStatement stmt = null;
		ResultSet rs = null;
		String sql = "select * from members where grade=?";
		
		try {
			conn = getConnection();
			stmt = conn.prepareStatement(sql);
			stmt.setString(1, grade);
			rs = stmt.executeQuery();
			
			String memberId = null;
			String memberPw = null;
			String memberName = null;
			String mobile = null;
			String email = null;
			String entryDate = null;
			int mileage = 0;
			String manager = null;
			Member dto = null;
			
			while(rs.next()) {
				memberId = rs.getString("member_id");
				memberPw = rs.getString("member_pw");
				memberName = rs.getString("member_name");
				mobile = rs.getString("mobile");
				email = rs.getString("email");
				entryDate = rs.getString("entry_date");
				mileage = rs.getInt("mileage");
				manager = rs.getString("manager");
				
				dto = new Member(memberId, memberPw, memberName, mobile, email, entryDate, grade, mileage, manager);
				list.add(dto);
			}
			
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("Error(��޺� ��üȸ����ȸ����) : " + e.getMessage());
		} finally {
			factory.close(rs, stmt, conn);
		}
		
		return list;
	}

	// ȸ�� ���
	public int insert(Member dto) {
		Connection conn = null;
		PreparedStatement stmt = null;
		ResultSet rs = null;
		String sql = "insert into members values(?, ?, ?, ?, ?, ?, ?, ?, ?)";
		
		try {
			conn = getConnection();
			stmt = conn.prepareStatement(sql);
			stmt.setString(1, dto.getMemberId());
			stmt.setString(2, dto.getMemberPw());
			stmt.setString(3, dto.getMemberName());
			stmt.setString(4, dto.getMobile());
			stmt.setString(5, dto.getEmail());
			stmt.setString(6, dto.getEntryDate());
			stmt.setString(7, dto.getGrade()+"");
			stmt.setInt(8, dto.getMileage());
			stmt.setString(9, dto.getManager());
			
			return stmt.executeUpdate();
			
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("Error(ȸ����� ����) : " + e.getMessage());
		} finally {
			factory.close(rs, stmt, conn);
		}
		
		return 0;
	}
	
	/* ������ ��ü����
	-- ����������
	-- ����� ���氡���� �Ӽ�
	-- ��ȣ, �̸�, ����ó, �̸���
	update members set
	member_pw=?, member_name=?, mobile=?, email=?
	where member_id=?
	
	-- ������ ȸ�������� ����
	-- ��ȣ, �̸�, ����ó, �̸���, ������, ���, ���ϸ���, ���
	
	*/
	public int update(Member dto) {
		Connection conn = null;
		PreparedStatement stmt = null;
		ResultSet rs = null;
		
		//String sql = "insert into members values(?, ?, ?, ?, ?, ?, ?, ?, ?)";
		StringBuilder sql = new StringBuilder();
		sql.append("update members set ");
		sql.append("member_pw=?, member_name=?, mobile=?, email=? ");
		sql.append("where member_id=?");
		
		try {
			conn = getConnection();
			stmt = conn.prepareStatement(sql.toString());
			stmt.setString(1, dto.getMemberPw());
			stmt.setString(2, dto.getMemberName());
			stmt.setString(3, dto.getMobile());
			stmt.setString(4, dto.getEmail());
			stmt.setString(5, dto.getMemberId());
			
			return stmt.executeUpdate();
			
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("Error(ȸ�� ������ ���� ����) : " + e.getMessage());
		} finally {
			factory.close(rs, stmt, conn);
		}
		
		return 0;
	}
	
	// ȸ�� Ż��
	public int delete(String memberId) {
		Connection conn = null;
		PreparedStatement stmt = null;
		ResultSet rs = null;
		String sql = "delete members where member_id=?";
		
		try {
			conn = getConnection();
			stmt = conn.prepareStatement(sql);
			stmt.setString(1, memberId);
			
			return stmt.executeUpdate();
			
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("Error(ȸ��Ż�� ����) : " + e.getMessage());
		} finally {
			factory.close(rs, stmt, conn);
		}
		
		return 0;
	}
	
	// �α���
	public String loginCheck(String memberId, String memberPw) {
		Connection conn = null;
		PreparedStatement stmt = null;
		ResultSet rs = null;
		String sql = "select grade from members where member_id=? and member_pw=?";
		
		try {
			conn = getConnection();
			stmt = conn.prepareStatement(sql);
			stmt.setString(1, memberId);
			stmt.setString(2, memberPw);
			rs = stmt.executeQuery();
			if(rs.next()) {
				return rs.getString("grade");
			}
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("Error(�α��ο���) : " + e.getMessage());
		} finally {
			factory.close(rs, stmt, conn);
		}
		
		return null;
	}
	
	// ������ : ȸ�� ��ü���� ����
	public int updateAll(Member dto) {
		Connection conn = null;
		PreparedStatement stmt = null;
		ResultSet rs = null;
		
		//String sql = "insert into members values(?, ?, ?, ?, ?, ?, ?, ?, ?)";
		StringBuilder sql = new StringBuilder();
		sql.append("update members set ");
		sql.append("member_pw=?, member_name=?, mobile=?, email=?, ");
		sql.append("entry_date=?, grade=?, mileage=?, manager=? ");
		sql.append("where member_id=?");
		
		try {
			conn = getConnection();
			stmt = conn.prepareStatement(sql.toString());
			stmt.setString(1, dto.getMemberPw());
			stmt.setString(2, dto.getMemberName());
			stmt.setString(3, dto.getMobile());
			stmt.setString(4, dto.getEmail());
			stmt.setString(5, dto.getEntryDate());
			stmt.setString(6, dto.getGrade());
			stmt.setInt(7, dto.getMileage());
			stmt.setString(8, dto.getManager());
			stmt.setString(9, dto.getMemberId());
			
			return stmt.executeUpdate();
			
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("Error(ȸ�� ������ ���� ����) : " + e.getMessage());
		} finally {
			factory.close(rs, stmt, conn);
		}
		
		return 0;
	}
	
	// ���̵� ã��
	public String selectMemberId(String memberName, String mobile) {
		Connection conn = null;
		PreparedStatement stmt = null;
		ResultSet rs = null;
		StringBuilder sql = new StringBuilder();
		sql.append("select member_id from members ");
		sql.append("where member_name=? and mobile=?");
		
		try {
			conn = getConnection();
			stmt = conn.prepareStatement(sql.toString());
			stmt.setString(1, memberName);
			stmt.setString(2, mobile);
			rs = stmt.executeQuery();
			
			if(rs.next()) {
				return rs.getString("member_id");
			}
			
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("Error(ȸ�� ���̵�ã�� ����) : " + e.getMessage());
		} finally {
			factory.close(rs, stmt, conn);
		}
		
		return null;
	}
	
	/*
	 * ��ȣã��
	 * 1. ����� �˻�
	 * 2. �ӽþ�ȣ �߱�
	 * 3. �ӽþ�ȣ�� ���� ��ȣ ����
	 * 4. �ӽþ�ȣ ��ȯ
	 */
	public String selectMemberPw(String memberId, String memberName, String mobile) {
		Connection conn = null;
		PreparedStatement stmt = null;
		ResultSet rs = null;
		StringBuilder sql = new StringBuilder();
		sql.append("select member_id from members ");
		sql.append("where member_id=? and member_name=? and mobile=?");
		
		try {
			conn = getConnection();
			stmt = conn.prepareStatement(sql.toString());
			stmt.setString(1, memberId);
			stmt.setString(2, memberName);
			stmt.setString(3, mobile);
			rs = stmt.executeQuery();
			
			if(rs.next()) {
				String tmpPw = Utility.getSecureString(8);
				System.out.println("\n## �ӽù߱޾�ȣ : " + tmpPw);
				
				sql = new StringBuilder();
				sql.append("update members set ");
				sql.append("member_pw=?");
				sql.append("where member_id=?");
				stmt = conn.prepareStatement(sql.toString());
				stmt.setString(1, tmpPw);
				stmt.setString(2, memberId);
				int rows = stmt.executeUpdate();
				if (rows == 1) {
					return tmpPw;
				}
			}
			
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("Error(ȸ�� ��ȣã�� ����) : " + e.getMessage());
		} finally {
			factory.close(rs, stmt, conn);
		}
		
		return null;
	}
	
	// ��ȣ����
	public int updatePassword(String memberId, String memberPw, String newMemberPw) {
		Connection conn = null;
		PreparedStatement stmt = null;
		ResultSet rs = null;
		
		StringBuilder sql = new StringBuilder();
		sql.append("update members set ");
		sql.append("member_pw=? ");
		sql.append("where member_id=? and member_pw=?");
		
		try {
			conn = getConnection();
			stmt = conn.prepareStatement(sql.toString());
			stmt.setString(1, newMemberPw);
			stmt.setString(2, memberId);
			stmt.setString(3, memberPw);
			
			return stmt.executeUpdate();
			
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("Error(ȸ�� ������ ���� ����) : " + e.getMessage());
		} finally {
			factory.close(rs, stmt, conn);
		}
		
		return 0;
	}
	
	
	// �α���
	// ������ : ȸ����޺���
	// ������ : ȸ�����ϸ��� ����
	// ...
	
}









