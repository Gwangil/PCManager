/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.16
 * Generated at: 2017-07-20 01:22:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1500469334622L));
    _jspx_dependants.put("jar:file:/C:/01.web_project/wokrspace/02.pcmanager_workspace_2.0.0/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/pcmanager.2.0.1/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!-- jstl cofing -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title>회원가입</title>\r\n");
      out.write("\r\n");
      out.write("<!-- external css : css/common.css -->\r\n");
      out.write("<link type=\"text/css\" rel=\"stylesheet\" href=\"/pcm/css/common.css\">\r\n");
      out.write("\r\n");
      out.write("<!-- internal js -->\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!-- header area -->\r\n");
      out.write("<!-- logo link -->\r\n");
      out.write("<a href=\"/pcm/index.jsp\">\r\n");
      out.write("<img src=\"img/logo.gif\" title=\"홈페이지 이동\">\r\n");
      out.write("</a>\r\n");
      out.write("<hr>\r\n");
      out.write("\r\n");
      out.write("<!-- 로그인 전 메뉴 -->\r\n");
      out.write("<div class=\"menu_area\" style=\"text-align:right;\">\r\n");
      out.write("<a class=\"normal\" href=\"login.jsp\">로그인</a>\r\n");
      out.write("<a class=\"normal\" href=\"join.jsp\">회원가입</a>\r\n");
      out.write("<a class=\"normal\" href=\"memberIdAndPw.jsp\">아이디/비밀번호 찾기</a>\r\n");
      out.write("<a class=\"normal\" href=\"/pcm/product/order.jsp\">상품주문</a>\r\n");
      out.write("</div>\r\n");
      out.write("<hr>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- content area -->\r\n");
      out.write("<h3>회원가입(html5)</h3>\r\n");
      out.write("<form action=\"/pcm/controller?action=joinSave\" method=\"post\">\r\n");
      out.write("<table class=\"tab_form\">\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th class=\"th_title\">아이디</th>\r\n");
      out.write("\t\t<td>\r\n");
      out.write("\t\t<input type=\"text\" name=\"memberId\" \r\n");
      out.write("\t\tminlength=\"4\" maxlength=\"20\" placeholder=\"아이디 4~20자리이내\"\r\n");
      out.write("\t\tautofocus required title=\"아이디 입력\">\t\t\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th class=\"th_title\">비밀번호</th>\r\n");
      out.write("\t\t<td>\r\n");
      out.write("\t\t<input type=\"password\" name =\"memberPw\"\r\n");
      out.write("\t\t\tminlength=\"6\" maxlength=\"20\" placeholder=\"비밀번호 6~20자리이내\"\r\n");
      out.write("\t\t\trequired title=\"비밀번호 입력\">\t\t\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th class=\"th_title\">이름</th>\r\n");
      out.write("\t\t<td>\r\n");
      out.write("\t\t<input type=\"text\" name =\"memberName\"\r\n");
      out.write("\t\t\tplaceholder=\"이름 필수항목\" required title=\"이름 입력\">\t\t\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th class=\"th_title\">성별</th>\r\n");
      out.write("\t\t<td>\r\n");
      out.write("\t\t\t<input type=\"radio\" name=\"gender\" value=\"남\" checked>남\r\n");
      out.write("\t\t\t<input type=\"radio\" name=\"gender\" value=\"여\" checked>여\t\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th class=\"th_title\">생년월일</th>\r\n");
      out.write("\t\t<td>\r\n");
      out.write("\t\t<input type=\"text\" name=\"birthDate\" maxlength=\"12\" placeholder=\"년(4자)/월(2자)/일(2자)\">\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th class=\"th_title\">연락처</th>\r\n");
      out.write("\t\t<td>\r\n");
      out.write("\t\t<input type=\"tel\" name =\"mobile\" required\r\n");
      out.write("\t\t\tpattern=\"(010|011|016|017|019)-\\d{3,4}-\\d{4}\" \r\n");
      out.write("\t\t\ttitle=\"휴대폰 번호 예시 : 010-1234-1234\"\r\n");
      out.write("\t\t\tplaceholder=\"예) 010-1234-1234 필수항목\" title=\"휴대폰 입력\">\t\t\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th class=\"th_title\">이메일</th>\r\n");
      out.write("\t\t<td>\r\n");
      out.write("\t\t<input type=\"email\" name =\"email\" required \r\n");
      out.write("\t\t\tplaceholder=\"이메일 필수항목\" title=\"이메일 입력\">\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th class=\"th_title\">주소</th>\r\n");
      out.write("\t\t<td>\r\n");
      out.write("\t\t<input type=\"text\" size=\"50\" name=\"address\"/>\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td colspan=\"2\">&nbsp;</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td colspan=\"2\" class=\"input_button\">\r\n");
      out.write("\t\t\t<input class=\"input_button\" type=\"submit\" value=\"회원가입\">\r\n");
      out.write("\t\t\t<input class=\"input_button\" type=\"reset\" value=\"취소\">\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- footer area -->\r\n");
      out.write("<hr>\r\n");
      out.write("<div class=\"footer_area\" style=\"text-align:center;\">\r\n");
      out.write("COPYRIGHT 2017 WORK. ALL RIGHTS RESERVED\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
