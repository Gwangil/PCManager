/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.16
 * Generated at: 2017-07-21 02:56:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import work.model.dto.*;
import work.model.dao.*;
import java.util.ArrayList;

public final class result_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/01.web_project/wokrspace/02.pcmanager_workspace_2.0.0/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/pcmanager.3.0.0/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1500469334000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("work.model.dao");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("work.model.dto");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- jstl cofing -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title>회원전용 서비스 메인</title>\r\n");
      out.write("<!-- external css : css/common.css -->\r\n");
      out.write("<link type=\"text/css\" rel=\"stylesheet\" href=\"css/common.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"Resources/css/bootstrap.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/pcm/css/style.css\">\r\n");
      out.write("<style>\r\n");
      out.write("\tbody {\r\n");
      out.write("\t\tbackground-image: url('img/pcbackground3.jpg'); background-size: cover;\r\n");
      out.write("\t\tbackground-repeat : no-repeat;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t/* Full-width input fields */\r\n");
      out.write("input[type=text], input[type=password] {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    padding: 12px 20px;\r\n");
      out.write("    margin: 8px 0;\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("    border: 1px solid #ccc;\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Set a style for all buttons */\r\n");
      out.write("button {\r\n");
      out.write("    background-color: #4CAF50;\r\n");
      out.write("    color: white;\r\n");
      out.write("    padding: 14px 20px;\r\n");
      out.write("    margin: 8px 0;\r\n");
      out.write("    border: none;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Extra styles for the cancel button */\r\n");
      out.write(".cancelbtn2 {\r\n");
      out.write("    padding: 14px 14px;\r\n");
      out.write("    background-color: #fcb259;\r\n");
      out.write("    font-size: 20px;\r\n");
      out.write("    float:right;\r\n");
      out.write("    width:30%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".signupbtn {\r\n");
      out.write("\tpadding: 14px 14px;\r\n");
      out.write("    background-color: #3f7f95;\r\n");
      out.write("    font-size: 20px;\r\n");
      out.write("\tfloat:left;\r\n");
      out.write("\twidth:50%;}\r\n");
      out.write("\r\n");
      out.write("/* Add padding to container elements */\r\n");
      out.write(".container {\r\n");
      out.write("    padding: 16px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* The Modal (background) */\r\n");
      out.write(".modal {\r\n");
      out.write("    display: none; /* Hidden by default */\r\n");
      out.write("    position: fixed; /* Stay in place */\r\n");
      out.write("    z-index: 1; /* Sit on top */\r\n");
      out.write("    left: 0;\r\n");
      out.write("    top: 0;\r\n");
      out.write("    width: 100%; /* Full width */\r\n");
      out.write("    height: 100%; /* Full height */\r\n");
      out.write("    overflow: auto; /* Enable scroll if needed */\r\n");
      out.write("    background-color: #17181d; /* Fallback color */\r\n");
      out.write("    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\r\n");
      out.write("    padding-top: 0px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Modal Content/Box */\r\n");
      out.write(".modal-content {\r\n");
      out.write("    background-color: #17181d;\r\n");
      out.write("    margin: 7% auto 15% auto; /* 5% from the top, 15% from the bottom and centered */\r\n");
      out.write("    border: 1px solid #888;\r\n");
      out.write("    width: 80%; /* Could be more or less, depending on screen size */\r\n");
      out.write("    height: 57%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* The Close Button (x) */\r\n");
      out.write(".close {\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    right: 35px;\r\n");
      out.write("    top: 15px;\r\n");
      out.write("    color: #000;\r\n");
      out.write("    font-size: 40px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(".radio {\r\n");
      out.write("\tfont-color: #f2f2f2;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".close:hover,\r\n");
      out.write(".close:focus {\r\n");
      out.write("    color: red;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Clear floats */\r\n");
      out.write(".clearfix::after {\r\n");
      out.write("    content: \"\";\r\n");
      out.write("    clear: both;\r\n");
      out.write("    display: table;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Change styles for cancel button and signup button on extra small screens */\r\n");
      out.write("@media screen and (max-width: 300px) {\r\n");
      out.write("    .cancelbtn, .signupbtn {\r\n");
      out.write("       width: 100%;\r\n");
      out.write("    }\r\n");
      out.write("}\t\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("/* Full-width input fields */\r\n");
      out.write("input[type=text], input[type=password] {\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    padding: 12px 20px;\r\n");
      out.write("    margin: 8px 0;\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("    border: 1px solid #ccc;\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Set a style for all buttons */\r\n");
      out.write("button {\r\n");
      out.write("    background-color: #fcb259;\r\n");
      out.write("    color: white;\r\n");
      out.write("    padding: 14px 20px;\r\n");
      out.write("    margin: 8px 0;\r\n");
      out.write("    border: none;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button:hover {\r\n");
      out.write("    opacity: 0.8;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Extra styles for the cancel button */\r\n");
      out.write(".cancelbtn {\r\n");
      out.write("    width: auto;\r\n");
      out.write("    padding: 10px 18px;\r\n");
      out.write("    font-size: 20px;\r\n");
      out.write("    background-color: #e15b50;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(".container {\r\n");
      out.write("    padding: 16px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("span.psw {\r\n");
      out.write("    float: right;\r\n");
      out.write("    padding-top: 16px;\r\n");
      out.write("    font-size: 20px;\r\n");
      out.write("    font-color: #f2f2f2;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* The modal4 (background) */\r\n");
      out.write(".modal4 {\r\n");
      out.write("    display: none; /* Hidden by default */\r\n");
      out.write("    position: fixed; /* Stay in place */\r\n");
      out.write("    z-index: 1; /* Sit on top */\r\n");
      out.write("    left: 0;\r\n");
      out.write("    top: 0;\r\n");
      out.write("    width: 100%; /* Full width */\r\n");
      out.write("    height: 100%; /* Full height */\r\n");
      out.write("    overflow: auto; /* Enable scroll if needed */\r\n");
      out.write("    background-color: #17181d; /* Fallback color */\r\n");
      out.write("    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\r\n");
      out.write("    padding-top: 60px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* modal4 Content/Box */\r\n");
      out.write(".modal4-content {\r\n");
      out.write("    background-color: #17181d;\r\n");
      out.write("    margin: 5% auto 15% auto; /* 5% from the top, 15% from the bottom and centered */\r\n");
      out.write("    border: 1px solid #888;\r\n");
      out.write("    width: 80%; /* Could be more or less, depending on screen size */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* The Close Button (x) */\r\n");
      out.write(".close {\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    right: 25px;\r\n");
      out.write("    top: 0;\r\n");
      out.write("    color: #000;\r\n");
      out.write("    font-size: 35px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".close:hover,\r\n");
      out.write(".close:focus {\r\n");
      out.write("    color: red;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Add Zoom Animation */\r\n");
      out.write(".animate {\r\n");
      out.write("    -webkit-animation: animatezoom 0.6s;\r\n");
      out.write("    animation: animatezoom 0.6s\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@-webkit-keyframes animatezoom {\r\n");
      out.write("    from {-webkit-transform: scale(0)} \r\n");
      out.write("    to {-webkit-transform: scale(1)}\r\n");
      out.write("}\r\n");
      out.write("    \r\n");
      out.write("@keyframes animatezoom {\r\n");
      out.write("    from {transform: scale(0)} \r\n");
      out.write("    to {transform: scale(1)}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(".signupbtn {\r\n");
      out.write("\tpadding: 14px 14px;\r\n");
      out.write("    background-color: #3f7f95;\r\n");
      out.write("    font-size: 20px;\r\n");
      out.write("\tfloat:left;\r\n");
      out.write("\twidth:50%;}\r\n");
      out.write("\r\n");
      out.write("/* Add padding to container elements */\r\n");
      out.write(".container {\r\n");
      out.write("    padding: 16px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* The modal4 (background) */\r\n");
      out.write(".modal4 {\r\n");
      out.write("    display: none; /* Hidden by default */\r\n");
      out.write("    position: fixed; /* Stay in place */\r\n");
      out.write("    z-index: 1; /* Sit on top */\r\n");
      out.write("    left: 0;\r\n");
      out.write("    top: 0;\r\n");
      out.write("    width: 100%; /* Full width */\r\n");
      out.write("    height: 100%; /* Full height */\r\n");
      out.write("    overflow: auto; /* Enable scroll if needed */\r\n");
      out.write("    background-color: #17181d; /* Fallback color */\r\n");
      out.write("    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\r\n");
      out.write("    padding-top: 60px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* modal4 Content/Box */\r\n");
      out.write(".modal4-content {\r\n");
      out.write("    background-color: #a0a0a0;\r\n");
      out.write("    margin: 5% auto 15% auto; /* 5% from the top, 15% from the bottom and centered */\r\n");
      out.write("    border: 1px solid #888;\r\n");
      out.write("    width: 40%; /* Could be more or less, depending on screen size */\r\n");
      out.write("    height: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* The Close Button (x) */\r\n");
      out.write(".close {\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    right: 35px;\r\n");
      out.write("    top: 15px;\r\n");
      out.write("    color: #000;\r\n");
      out.write("    font-size: 40px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<style>\r\n");
      out.write("/* Full-width input fields */\r\n");
      out.write("input[type=text], input[type=password] {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    padding: 12px 20px;\r\n");
      out.write("    margin: 8px 0;\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("    border: 1px solid #ccc;\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Set a style for all buttons */\r\n");
      out.write("button {\r\n");
      out.write("    background-color: #4CAF50;\r\n");
      out.write("    color: white;\r\n");
      out.write("    padding: 14px 20px;\r\n");
      out.write("    margin: 8px 0;\r\n");
      out.write("    border: none;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Extra styles for the cancel button */\r\n");
      out.write(".cancelbtn2 {\r\n");
      out.write("    padding: 14px 14px;\r\n");
      out.write("    background-color: #fcb259;\r\n");
      out.write("    font-size: 20px;\r\n");
      out.write("    float:right;\r\n");
      out.write("    width:30%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".signupbtn {\r\n");
      out.write("\tpadding: 14px 14px;\r\n");
      out.write("    background-color: #3f7f95;\r\n");
      out.write("    font-size: 20px;\r\n");
      out.write("\tfloat:left;\r\n");
      out.write("\twidth:50%;}\r\n");
      out.write("\r\n");
      out.write("/* Add padding to container elements */\r\n");
      out.write(".container {\r\n");
      out.write("    padding: 16px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* The Modal (background) */\r\n");
      out.write(".modal {\r\n");
      out.write("    display: none; /* Hidden by default */\r\n");
      out.write("    position: fixed; /* Stay in place */\r\n");
      out.write("    z-index: 1; /* Sit on top */\r\n");
      out.write("    left: 0;\r\n");
      out.write("    top: 0;\r\n");
      out.write("    width: 100%; /* Full width */\r\n");
      out.write("    height: 100%; /* Full height */\r\n");
      out.write("    overflow: auto; /* Enable scroll if needed */\r\n");
      out.write("    background-color: #17181d; /* Fallback color */\r\n");
      out.write("    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\r\n");
      out.write("    padding-top: 0px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Modal Content/Box */\r\n");
      out.write(".modal-content {\r\n");
      out.write("    background-color: #17181d;\r\n");
      out.write("    margin: 7% auto 15% auto; /* 5% from the top, 15% from the bottom and centered */\r\n");
      out.write("    border: 1px solid #888;\r\n");
      out.write("    width: 80%; /* Could be more or less, depending on screen size */\r\n");
      out.write("    height: 57%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* The Close Button (x) */\r\n");
      out.write(".close {\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    right: 35px;\r\n");
      out.write("    top: 15px;\r\n");
      out.write("    color: #000;\r\n");
      out.write("    font-size: 40px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(".radio {\r\n");
      out.write("\tfont-color: #f2f2f2;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".close:hover,\r\n");
      out.write(".close:focus {\r\n");
      out.write("    color: red;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Clear floats */\r\n");
      out.write(".clearfix::after {\r\n");
      out.write("    content: \"\";\r\n");
      out.write("    clear: both;\r\n");
      out.write("    display: table;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Change styles for cancel button and signup button on extra small screens */\r\n");
      out.write("@media screen and (max-width: 300px) {\r\n");
      out.write("    .cancelbtn, .signupbtn {\r\n");
      out.write("       width: 100%;\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tfunction winsinglechat() {\r\n");
      out.write("\t\tvar winName=\"1:1 관리자 채팅\";\r\n");
      out.write("\r\n");
      out.write("\t\tflag = \"left=200, \"; //창뜨는위치\r\n");
      out.write("\t\tflag += \"top=200, \"; //창뜨는위치\r\n");
      out.write("\t\tflag += \"width=800, \"; //창크기\r\n");
      out.write("\t\tflag += \"height=380\"; //창크기\r\n");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\twindow.open(\"/pcm/controller?action=singleChatting\", winName, flag)\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction winopenchat() {\r\n");
      out.write("\t\tvar winName=\"1:1 관리자 채팅\";\r\n");
      out.write("\r\n");
      out.write("\t\tflag = \"left=200, \"; //창뜨는위치\r\n");
      out.write("\t\tflag += \"top=200, \"; //창뜨는위치\r\n");
      out.write("\t\tflag += \"width=800, \"; //창크기\r\n");
      out.write("\t\tflag += \"height=380\"; //창크기\r\n");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\twindow.open(\"/pcm/chatting/chatting.jsp\", winName, flag)\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!-- 로그인 후 메뉴 -->\r\n");
      out.write("<div class=\"menu_area\" style=\"text-align:right;\">\r\n");
      out.write("\t");
      //  c:choose
      org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
      boolean _jspx_th_c_005fchoose_005f0_reused = false;
      try {
        _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fchoose_005f0.setParent(null);
        int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
        if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write('\r');
            out.write('\n');
            out.write('	');
            //  c:when
            org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
            boolean _jspx_th_c_005fwhen_005f0_reused = false;
            try {
              _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
              _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
              // /result.jsp(423,1) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty sessionScope.memberId and \r\n		not empty sessionScope.grade}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
              int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
              if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                do {
                  out.write("\r\n");
                  out.write("\t\t<h1>");
                  out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.memberId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
                  out.write('님');
                  out.write('[');
                  out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.grade}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
                  out.write("]&nbsp;</h1>\r\n");
                  out.write("\t\t<button type=\"button\" class=\"btn btn-success btn-lg\" onclick=\"location.href='/pcm/controller?action=logout'\" style=\"width:auto;\">로그아웃</button>\r\n");
                  out.write("\t\t<button type=\"button\" class=\"btn btn-warning btn-lg\" onclick=\"location.href='/pcm/controller?action=myInfo'\" style=\"width:auto;\">내 정보 조회(변경)</button>\r\n");
                  out.write("\t\t<button type=\"button\" class=\"btn btn-danger btn-lg\" onclick=\"location.href='/pcm/member/changePassword.jsp'\" style=\"width:auto;\">암호변경</button>\r\n");
                  out.write("\t\t<button type=\"button\" class=\"btn btn-primary btn-lg\" onclick=\"document.getElementById('id04').style.display='block'\" style=\"width:auto;\">상품주문</button>\r\n");
                  out.write("\t\t<button type=\"button\" class=\"btn btn-primary btn-lg\" onclick=\"winopenchat()\" style=\"width:auto;\">오픈채팅</button>\r\n");
                  out.write("\t\t<button type=\"button\" class=\"btn btn-danger btn-lg\" onclick=\"winsinglechat()\" style=\"width:auto;\">관리자 1:1 채팅</button>\r\n");
                  out.write("\t\t<!-- 관리자 메뉴 -->\r\n");
                  out.write("\t\t");
                  if (_jspx_meth_c_005fif_005f0(_jspx_th_c_005fwhen_005f0, _jspx_page_context))
                    return;
                  out.write("\r\n");
                  out.write("\t\t\t");
                  //  c:if
                  org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
                  boolean _jspx_th_c_005fif_005f1_reused = false;
                  try {
                    _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
                    _jspx_th_c_005fif_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f0);
                    // /result.jsp(443,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.grade == 'G'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
                    int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
                    if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                      do {
                        out.write("\r\n");
                        out.write("\t\t");

			SeatDao dao = new SeatDao();
			Seat tmp =  dao.selectOne((String) session.getAttribute("memberId"));
			int seatNo =tmp.getSeatNo();
			String startTime=dao.selectStartTime(seatNo);
			String finishTime=dao.selectFinishTime(seatNo);
		
                        out.write("\r\n");
                        out.write("\t\t\t<table width=\"400px\" class=\"table-bordered table-striped nanum\" height=\"400\" border=\"1\" align=\"right\" border=\"2\" >\r\n");
                        out.write("\t\t\t\t<tr class=\"info h3\">\r\n");
                        out.write("\t\t\t\t\t<td  width=\"100px\" >\r\n");
                        out.write("\t\t\t\t\t<h2>좌석번호</h2> \r\n");
                        out.write("\t\t\t\t\t</td>\r\n");
                        out.write("\t\t\t\t\t<td width=\"300px\">\r\n");
                        out.write("\t\t\t\t\t\t<h2>");
                        out.print(tmp.getSeatNo());
                        out.write("</h2>\r\n");
                        out.write("\t\t\t\t\t</td>\r\n");
                        out.write("\t\t\t\t</tr>\r\n");
                        out.write("\t\t\t\t<tr class=\"success h3\">\r\n");
                        out.write("\t\t\t\t\t<td  width=\"100px\">\r\n");
                        out.write("\t\t\t\t\t<h2>id</h2>\r\n");
                        out.write("\t\t\t\t\t</td>\r\n");
                        out.write("\t\t\t\t\t<td width=\"300px\" class=\"success\">\r\n");
                        out.write("\t\t\t\t\t");
                        out.print(tmp.getMemberId()+"["+(String)session.getAttribute("grade")+"]");
                        out.write("\r\n");
                        out.write("\t\t\t\t\t</td>\r\n");
                        out.write("\t\t\t\t</tr>\r\n");
                        out.write("\t\t\t\t<tr class=\"info h3\">\r\n");
                        out.write("\t\t\t\t\t<td  width=\"100px\">\r\n");
                        out.write("\t\t\t\t\t시작시간\r\n");
                        out.write("\t\t\t\t\t</td>\r\n");
                        out.write("\t\t\t\t\t<td width=\"300px\">\r\n");
                        out.write("\t\t\t\t\t\t");
                        out.print(startTime);
                        out.write("\r\n");
                        out.write("\t\t\t\t\t</td>\r\n");
                        out.write("\t\t\t\t</tr>\r\n");
                        out.write("\t\t\t\t<tr class=\"success h3\">\r\n");
                        out.write("\t\t\t\t\t<td  width=\"100px\">\r\n");
                        out.write("\t\t\t\t\t종료시간\r\n");
                        out.write("\t\t\t\t\t</td>\r\n");
                        out.write("\t\t\t\t\t<td width=\"300px\">\r\n");
                        out.write("\t\t\t\t\t\t");
                        out.print(finishTime);
                        out.write("\r\n");
                        out.write("\t\t\t\t\t</td>\r\n");
                        out.write("\t\t\t\t</tr>\r\n");
                        out.write("\t\t\t\r\n");
                        out.write("\t\t\t</table>\r\n");
                        out.write("\t\t");
                        int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
                        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                          break;
                      } while (true);
                    }
                    if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                      return;
                    }
                    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
                    _jspx_th_c_005fif_005f1_reused = true;
                  } finally {
                    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
                  }
                  out.write('\r');
                  out.write('\n');
                  out.write('	');
                  int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
              }
              if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
              _jspx_th_c_005fwhen_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
            }
            out.write("\r\n");
            out.write("\t\r\n");
            out.write("\t");
            if (_jspx_meth_c_005fwhen_005f1(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
              return;
            out.write('\r');
            out.write('\n');
            out.write('	');
            int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
        _jspx_th_c_005fchoose_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
      }
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<table width=\"500px\">\r\n");
      out.write("<tr> \r\n");
      out.write("<td width=\"100px\" height=\"600px\">\r\n");
      out.write("</td>\r\n");
      out.write("<td>\r\n");
      out.write("\t\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("<div id=\"id04\" class=\"modal4\">\r\n");
      out.write("  \r\n");
      out.write("  <form class=\"modal4-content animate\" action=\"pcontroller?action=order\" method=\"post\">\r\n");
      out.write("    <div class=\"imgcontainer\">\r\n");
      out.write("      <span onclick=\"document.getElementById('id04').style.display='none'\" class=\"close\" title=\"Close modal4\">&times;</span>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("  <div class=\"plans\">\r\n");
      out.write("    <div class=\"plan\">\r\n");
      out.write("    <h2 class=\"plan-title\">라면</h2>\r\n");
      out.write("      <img src=\"/pcm/img/ramen.jpg\">\r\n");
      out.write("      <ul class=\"plan-features\">\r\n");
      out.write("      <li><strong>라면</strong> 종류/수량</li><br>\r\n");
      out.write("        <select name=\"noodle1\">\r\n");
      out.write("\t\t\t\t<option selected disabled>라면 선택</option>\r\n");
      out.write("\t\t\t\t");
 
					ProductDao dao = new ProductDao();
					ArrayList<Product> list = dao.selectList("라면");
					Product dto = null;
					
					for (int index = 0 ; index < list.size() ; index++) {
						dto = list.get(index);
						String name = dto.getProductName();
				 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option value=");
      out.print(name );
      out.write('>');
      out.write(' ');
      out.print( name );
      out.write(" </option>\r\n");
      out.write("\t\t\t\t");

					}
				
      out.write("\t\t\r\n");
      out.write("\t\t\t</select>\r\n");
      out.write("\t\t\t<input type=\"number\" name=\"noodlecount1\" value=\"0\" step=\"1\" min=\"0\" max=\"100\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<select name=\"noodle2\">\r\n");
      out.write("\t\t\t\t<option disabled selected>라면 선택</option>\r\n");
      out.write("\t\t\t\t");
 
					dao = new ProductDao();
					list = dao.selectList("라면");
					dto = null;
				
					for (int index = 0 ; index < list.size() ; index++) {
						dto = list.get(index);
						String name = dto.getProductName();
				
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option value=");
      out.print(name );
      out.write('>');
      out.write(' ');
      out.print( name );
      out.write(" </option>\r\n");
      out.write("\t\t\t\t");

					}
				
      out.write("\r\n");
      out.write("\t\t\t</select>\r\n");
      out.write("\t\t\t<input type=\"number\" name=\"noodlecount2\" value=\"0\" step=\"1\" min=\"0\" max=\"100\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<select name=\"noodle3\">\r\n");
      out.write("\t\t\t\t<option disabled selected>라면 선택</option>\r\n");
      out.write("\t\t\t\t");
 
					dao = new ProductDao();
					list = dao.selectList("라면");
					dto = null;
					
					for (int index = 0 ; index < list.size() ; index++) {
						dto = list.get(index);
						String name = dto.getProductName();
				
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option value=");
      out.print(name );
      out.write('>');
      out.write(' ');
      out.print( name );
      out.write(" </option>\r\n");
      out.write("\t\t\t\t");

					}
				
      out.write("\r\n");
      out.write("\t\t\t</select>\r\n");
      out.write("\t\t\t<input type=\"number\" name=\"noodlecount3\" value=\"0\" step=\"1\" min=\"0\" max=\"100\">\r\n");
      out.write("      </ul>\r\n");
      out.write("      <input type=\"reset\" class=\"plan-button\" value=\"취소\">\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <div class=\"plan plan-tall\">\r\n");
      out.write("      <h2 class=\"plan-title\">음료</h2>\r\n");
      out.write("      <img src=\"/pcm/img/drink.jpg\">\r\n");
      out.write("      <ul class=\"plan-features\">\r\n");
      out.write("        <li><strong>음료</strong> 종류/수량</li><br>\r\n");
      out.write("    \t\t\r\n");
      out.write("    \t\t<select name=\"drink1\">\r\n");
      out.write("\t\t\t\t<option disabled selected>음료 선택</option>\r\n");
      out.write("\t\t\t\t");
 
					dao = new ProductDao();
					list = dao.selectList("음료");
					dto = null;
					
					for (int index = 0 ; index < list.size() ; index++) {
						dto = list.get(index);
						String name = dto.getProductName();
				
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option value=");
      out.print(name );
      out.write('>');
      out.write(' ');
      out.print( name );
      out.write(" </option>\r\n");
      out.write("\t\t\t\t");

					}
				
      out.write("\r\n");
      out.write("\t\t\t</select>\r\n");
      out.write("\t\t\t<input type=\"number\" name=\"drinkcount1\" value=\"0\" step=\"1\" min=\"0\" max=\"100\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<select name=\"drink2\">\r\n");
      out.write("\t\t\t\t<option disabled selected>음료 선택</option>\r\n");
      out.write("\t\t\t\t");
 
					dao = new ProductDao();
					list = dao.selectList("음료");
					dto = null;
					
					for (int index = 0 ; index < list.size() ; index++) {
						dto = list.get(index);
						String name = dto.getProductName();
				
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option value=");
      out.print(name );
      out.write('>');
      out.write(' ');
      out.print( name );
      out.write(" </option>\r\n");
      out.write("\t\t\t\t");

					}
				
      out.write("\r\n");
      out.write("\t\t\t</select>\r\n");
      out.write("\t\t\t<input type=\"number\" name=\"drinkcount2\" value=\"0\" step=\"1\" min=\"0\" max=\"100\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<select name=\"drink3\">\r\n");
      out.write("\t\t\t\t<option disabled selected>음료 선택</option>\t\t\t\r\n");
      out.write("\t\t\t\t");
 
					dao = new ProductDao();
					list = dao.selectList("음료");
					dto = null;
					
					for (int index = 0 ; index < list.size() ; index++) {
						dto = list.get(index);
						String name = dto.getProductName();
				
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option value=");
      out.print(name );
      out.write('>');
      out.write(' ');
      out.print( name );
      out.write(" </option>\r\n");
      out.write("\t\t\t\t");

					}
				
      out.write("\r\n");
      out.write("\t\t\t</select>\r\n");
      out.write("\t\t\t<input type=\"number\" name=\"drinkcount3\" value=\"0\" step=\"1\" min=\"0\" max=\"100\">\r\n");
      out.write("  \r\n");
      out.write("      </ul>\r\n");
      out.write("      <input class=\"plan-button\" type=\"submit\" value=\"주문하기\" >\r\n");
      out.write("      <!-- <a href=\"index.html\" class=\"plan-button\">Start Now</a> -->\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    <div class=\"plan\">\r\n");
      out.write("      <h2 class=\"plan-title\">빵</h2>\r\n");
      out.write("      <img src=\"/pcm/img/bread.jpg\">\r\n");
      out.write("      <ul class=\"plan-features\">\r\n");
      out.write("      <li><strong>빵</strong> 종류/수량</li><br>\r\n");
      out.write("       \t\t<select name=\"bread1\">\r\n");
      out.write("\t\t\t\t<option disabled selected>빵 선택</option>\r\n");
      out.write("\t\t\t\t");
 
					dao = new ProductDao();
					list = dao.selectList("빵류");
					dto = null;
					
					for (int index = 0 ; index < list.size() ; index++) {
						dto = list.get(index);
						String name = dto.getProductName();
				
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option value=");
      out.print(name );
      out.write('>');
      out.write(' ');
      out.print( name );
      out.write(" </option>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t");

					}
				
      out.write("\r\n");
      out.write("\t\t\t</select>\r\n");
      out.write("\t\t\t<input type=\"number\" name=\"breadcount1\" value=\"0\" step=\"1\" min=\"0\" max=\"100\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<select name=\"bread2\">\r\n");
      out.write("\t\t\t\t<option disabled selected>빵 선택</option>\r\n");
      out.write("\t\t\t\t");
 
					dao = new ProductDao();
					list = dao.selectList("빵류");
					dto = null;
					
					for (int index = 0 ; index < list.size() ; index++) {
						dto = list.get(index);
						String name = dto.getProductName();
				
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option value=");
      out.print(name );
      out.write('>');
      out.write(' ');
      out.print( name );
      out.write(" </option>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t");

					}
				
      out.write("\r\n");
      out.write("\t\t\t</select>\r\n");
      out.write("\t\t\t<input type=\"number\" name=\"breadcount2\" value=\"0\" step=\"1\" min=\"0\" max=\"100\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<select name=\"bread3\">\r\n");
      out.write("\t\t\t\t<option disabled selected>빵 선택</option>\r\n");
      out.write("\t\t\t\t");
 
					dao = new ProductDao();
					list = dao.selectList("빵류");
					dto = null;
					
					for (int index = 0 ; index < list.size() ; index++) {
						dto = list.get(index);
						String name = dto.getProductName();
				
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option value=");
      out.print(name );
      out.write('>');
      out.write(' ');
      out.print( name );
      out.write(" </option>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t");

					}
				
      out.write("\r\n");
      out.write("\t\t\t</select>\r\n");
      out.write("\t\t\t<input type=\"number\" name=\"breadcount3\" value=\"0\" step=\"1\" min=\"0\" max=\"100\">\r\n");
      out.write("      </ul>\r\n");
      out.write("      \r\n");
      out.write("      <input type=\"button\" class=\"plan-button\" value=\"돌아가기\" onclick=\"location.href='/pcm/result.jsp'\">\r\n");
      out.write("      </form>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"http://ajax.googleapis.com/ajax/libs/jqery/1.12.4/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/bootstrap.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f0);
      // /result.jsp(433,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.grade == 'A'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t<br><br>\r\n");
          out.write("\t\t\t<h1>[관리자]</h1>\r\n");
          out.write("\t\t\t<button type=\"button\" class=\"btn btn-warining btn-lg\" onclick=\"location.href='/pcm/controller?action=getMemberAll'\" style=\"width:auto;\">전체 회원조회</button>\r\n");
          out.write("\t\t\t<button type=\"button\" class=\"btn btn-danger btn-lg\" onclick=\"location.href='/pcm/seat/seatStart.jsp'\" style=\"width:auto;\">시스템</button>\r\n");
          out.write("\t\t\t<button type=\"button\" class=\"btn btn-primary btn-lg\" onclick=\"location.href='/pcm/pcontroller?action=getProductAll'\" style=\"width:auto;\">상품 관리</button>\r\n");
          out.write("\t\t\t<button type=\"button\" class=\"btn btn-primary btn-lg\" onclick=\"location.href='/pcm/pcontroller?action=getOrderAll'\" style=\"width:auto;\">주문 관리</button>\r\n");
          out.write("\t\t\t<button type=\"button\" class=\"btn btn-primary btn-lg\" onclick=\"location.href='/pcm/pcontroller?action=getSale'\" style=\"width:auto;\">매출 관리</button>\r\n");
          out.write("\t\t\t<button type=\"button\" class=\"btn btn-primary btn-lg\" onclick=\"location.href='/pcm/seatcontroller?action=checkCondition'\" style=\"width:auto;\">좌석 관리</button>\r\n");
          out.write("\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f1 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f1_reused = false;
    try {
      _jspx_th_c_005fwhen_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /result.jsp(489,1) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty sessionScope.memberId or \r\n		empty sessionScope.grade}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f1 = _jspx_th_c_005fwhen_005f1.doStartTag();
      if (_jspx_eval_c_005fwhen_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t");
          if (_jspx_meth_c_005fset_005f0(_jspx_th_c_005fwhen_005f1, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t");
          if (true) {
            _jspx_page_context.forward("/error.jsp");
            return true;
          }
          out.write('\r');
          out.write('\n');
          out.write('	');
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f1);
      _jspx_th_c_005fwhen_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f1);
      // /result.jsp(491,2) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("message");
      // /result.jsp(491,2) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/result.jsp(491,2) '로그인/회원가입 후 사용하시기 바랍니다.'",_jsp_getExpressionFactory().createValueExpression("로그인/회원가입 후 사용하시기 바랍니다.",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }
}
