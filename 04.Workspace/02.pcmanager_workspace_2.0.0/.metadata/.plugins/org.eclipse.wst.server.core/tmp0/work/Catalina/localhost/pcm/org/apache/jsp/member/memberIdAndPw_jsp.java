/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.16
 * Generated at: 2017-07-21 01:17:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class memberIdAndPw_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/01.web_project/wokrspace/02.pcmanager_workspace_2.0.0/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/pcmanager.3.0.0/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1500469334000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!-- jstl cofing -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title>아이디/비밀번호 찾기</title>\r\n");
      out.write("\r\n");
      out.write("<!-- external css : css/common.css -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/pcm/Resources/css/bootstrap.css\">\r\n");
      out.write("<link type=\"text/css\" rel=\"stylesheet\" href=\"css/common.css\">\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\tbody {\r\n");
      out.write("\t\tbackground-image: url('/pcm/img/pcbackground4.jpg'); background-size: cover;\r\n");
      out.write("\t\tbackground-repeat : no-repeat;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\th3 {\r\n");
      out.write("\t\tcolor:white;\r\n");
      out.write("\t}\r\n");
      out.write("\tinput[type=text], input[type=tel], input[type=password] {\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    padding: 12px 20px;\r\n");
      out.write("    margin: 8px 0;\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("    border: 1px solid #ccc;\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\t/* Set a style for all buttons */\r\n");
      out.write("\tbutton {\r\n");
      out.write("\t    background-color: #fcb259;\r\n");
      out.write("\t    color: white;\r\n");
      out.write("\t    padding: 14px 20px;\r\n");
      out.write("\t    margin: 8px 0;\r\n");
      out.write("\t    border: none;\r\n");
      out.write("\t    cursor: pointer;\r\n");
      out.write("\t    width: 100%;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tbutton:hover {\r\n");
      out.write("\t    opacity: 0.8;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t/* Center the image and position the close button */\r\n");
      out.write("\t.imgcontainer {\r\n");
      out.write("\t    text-align: center;\r\n");
      out.write("\t    margin: 24px 0 12px 0;\r\n");
      out.write("\t    position: relative;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.container {\r\n");
      out.write("    padding: 16px;\r\n");
      out.write("}\r\n");
      out.write("\t\r\n");
      out.write("\tspan.psw {\r\n");
      out.write("\t    float: right;\r\n");
      out.write("\t    padding-top: 16px;\r\n");
      out.write("\t    font-size: 20px;\r\n");
      out.write("\t    font-color: #f2f2f2;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t/* Clear floats */\r\n");
      out.write("\t.clearfix::after {\r\n");
      out.write("\t    content: \"\";\r\n");
      out.write("\t    clear: both;\r\n");
      out.write("\t    display: table;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t/* Add Zoom Animation */\r\n");
      out.write("\t.animate {\r\n");
      out.write("\t    -webkit-animation: animatezoom 0.6s;\r\n");
      out.write("\t    animation: animatezoom 0.6s\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t@-webkit-keyframes animatezoom {\r\n");
      out.write("\t    from {-webkit-transform: scale(0)} \r\n");
      out.write("\t    to {-webkit-transform: scale(1)}\r\n");
      out.write("\t}\r\n");
      out.write("\t    \r\n");
      out.write("\t@keyframes animatezoom {\r\n");
      out.write("\t    from {transform: scale(0)} \r\n");
      out.write("\t    to {transform: scale(1)}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t/* Change styles for span and cancel button on extra small screens */\r\n");
      out.write("\t@media screen and (max-width: 300px) {\r\n");
      out.write("\t    span.psw {\r\n");
      out.write("\t       display: block;\r\n");
      out.write("\t       float: none;\r\n");
      out.write("\t    }\r\n");
      out.write("\t    .cancelbtn, .signupbtn{\r\n");
      out.write("\t       width: 50%;\r\n");
      out.write("\t    }\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- internal js -->\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<h3>&nbsp;&nbsp;&nbsp;아이디 찾기</h3>\r\n");
      out.write("<table class=\"tab_form\">\r\n");
      out.write("<form action=\"/pcm/controller?action=findMemberId\" method=\"post\">\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th class=\"th_title\">이름</th>\r\n");
      out.write("\t\t<td>\r\n");
      out.write("\t\t<input type=\"text\" name =\"memberName\"\r\n");
      out.write("\t\t\tplaceholder=\"이름 필수항목\" required title=\"이름 입력\">\t\t\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th class=\"th_title\">연락처</th>\r\n");
      out.write("\t\t<td>\r\n");
      out.write("\t\t<input type=\"tel\" name =\"mobile\" required\r\n");
      out.write("\t\t\tpattern=\"(010|011|016|017|019)-\\d{3,4}-\\d{4}\" \r\n");
      out.write("\t\t\ttitle=\"휴대폰 번호 예시 : 010-1234-1234\"\r\n");
      out.write("\t\t\tplaceholder=\"연락처 필수항목\" title=\"휴대폰 입력\">\t\t\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td class=\"input_button\" colspan=\"2\">\r\n");
      out.write("\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<input class=\"btn btn-success btn-lg\" type=\"submit\" value=\"아이디 찾기\">\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("</form>\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("<h3>&nbsp;&nbsp;&nbsp;비밀번호 찾기</h3>\r\n");
      out.write("<table class=\"tab_form\">\r\n");
      out.write("<form action=\"/pcm/controller?action=findMemberPw\" method=\"post\">\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th class=\"th_title\">아이디</th>\r\n");
      out.write("\t\t<td>\r\n");
      out.write("\t\t<input type=\"text\" name=\"memberId\" \r\n");
      out.write("\t\tminlength=\"4\" maxlength=\"20\" placeholder=\"아이디 4~20자리이내\"\r\n");
      out.write("\t\tautofocus required title=\"아이디 입력\">\t\t\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th class=\"th_title\">이름</th>\r\n");
      out.write("\t\t<td>\r\n");
      out.write("\t\t<input type=\"text\" name =\"memberName\"\r\n");
      out.write("\t\t\tplaceholder=\"이름 필수항목\" required title=\"이름 입력\">\t\t\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th class=\"th_title\">연락처</th>\r\n");
      out.write("\t\t<td>\r\n");
      out.write("\t\t<input type=\"tel\" name =\"mobile\" required\r\n");
      out.write("\t\t\tpattern=\"(010|011|016|017|019)-\\d{3,4}-\\d{4}\" \r\n");
      out.write("\t\t\ttitle=\"휴대폰 번호 예시 : 010-1234-1234\"\r\n");
      out.write("\t\t\tplaceholder=\"연락처 필수항목\" title=\"휴대폰 입력\">\t\t\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td class=\"input_button\" colspan=\"2\">\r\n");
      out.write("\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<input class=\"btn btn-success btn-lg\" type=\"submit\" value=\"비밀번호 찾기\">\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("</form>\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("<script src=\"http://ajax.googleapis.com/ajax/libs/jqery/1.12.4/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/bootstrap.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
